{"version":3,"file":"index.js","sources":["../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/Table.vue","../src/index.js"],"sourcesContent":["function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n    <div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                Registros a mostrar:\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-4 mr-auto mb-4\">\n                <select class=\"form-control ml-md-1\" v-model.number=\"perPage\">\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                </select>\n            </div>\n            <div class=\"col-12 col-sm-12 col-md-4 mb-4\">\n                <div class=\"input-group\">\n                    <input class=\"form-control\" type=\"search\" v-model=\"query\" placeholder=\"Buscar\" />\n                    <div class=\"input-group-append\">\n                        <button class=\"input-group-text\" id=\"btnGroupAddon\">\n                            <i class=\"fa fa-search\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"table-responsive\">\n            <table class=\"table\" id=\"categories\">\n                <thead>\n                    <tr>\n                        <th v-for=\"(header, index) in titles\" :key=\"index\" @click=\"setSort(header)\">\n                            {{ header.description }} <span v-if=\"header.selected\">&ddarr;</span>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody v-if=\"this.records.length > 0\">\n                    <tr v-for=\"(record, index) in records\" :key=\"index\" :id=\"index\">\n                        <slot name=\"record\" :record=\"record\"></slot>\n                    </tr>\n                </tbody>\n                <tbody v-else>\n                    <tr>\n                        <th>Sin datos</th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"mb-4 col-12 col-sm-12 col-md-6 col-lg-9 text-center text-sm-center text-md-left\">\n                Registros del {{ this.from }} al {{ this.to }} de un total de {{ this.total }}\n            </div>\n            <div class=\"mb-4 col-12 col-sm-12 col-md-3 col-lg-2\">\n                <nav aria-label=\"Page navigation example\">\n                    <ul class=\"pagination justify-content-center\">\n                        <li class=\"page-item\">\n                            <a\n                                class=\"page-link\"\n                                :class=\"[page == 1 ? 'disabled text-muted' : '']\"\n                                href=\"#\"\n                                aria-label=\"First\"\n                                @click=\"goToFirst\"\n                            >\n                                <span aria-hidden=\"true\">&lt;&lt;</span>\n                            </a>\n                        </li>\n                        <li class=\"page-item\">\n                            <a\n                                class=\"page-link\"\n                                :class=\"[page == 1 ? 'disabled text-muted' : '']\"\n                                href=\"#\"\n                                aria-label=\"Previous\"\n                                @click=\"goToPrev\"\n                            >\n                                <span aria-hidden=\"true\">&lt;</span>\n                            </a>\n                        </li>\n                        <li class=\"page-item\">\n                            <a\n                                class=\"page-link\"\n                                :class=\"[page == last ? 'disabled text-muted' : '']\"\n                                href=\"#\"\n                                aria-label=\"Next\"\n                                @click=\"goToNext\"\n                            >\n                                <span aria-hidden=\"true\">&gt;</span>\n                            </a>\n                        </li>\n                        <li class=\"page-item\">\n                            <a\n                                class=\"page-link\"\n                                :class=\"[page == last ? 'disabled text-muted' : '']\"\n                                href=\"#\"\n                                aria-label=\"Last\"\n                                @click=\"goToLast\"\n                            >\n                                <span aria-hidden=\"true\">&gt;&gt;</span>\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n            <div class=\"mb-4 col-12 col-sm-12 col-md-3 col-lg-1\">\n                <div class=\"input-group\">\n                    <input\n                        type=\"number\"\n                        step=\"1\"\n                        class=\"form-control\"\n                        :placeholder=\"'Ir a pÃ¡gina'\"\n                        :value=\"page\"\n                        @change=\"setPage($event)\"\n                    />\n\n                    <div class=\"input-group-append\">\n                        <button class=\"input-group-text\">\n                            {{ last }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\timport axios from 'axios'\n\n    export default {\n        mounted() {\n            this.prepareTitles();\n        },\n        created() {\n            this.loadData();\n        },\n        props: {\n            headers: {\n                type: Array,\n                default: function () {\n                    return []\n                },\n            },\n            url: {\n                type: String,\n                default: function () {\n                    return ''\n                },\n            },\n        },\n        data() {\n            return {\n                titles: this.headers,\n                page: 1,\n                last: 1,\n                records: [],\n                total: 0,\n                state: {},\n                perPage: 10,\n                from: 0,\n                to: 0,\n                query: '',\n                sort: '',\n                direction: '',\n            };\n        },\n        watch: {\n            page() {\n                this.loadData();\n            },\n            perPage() {\n                if (this.page == 1) {\n                    this.loadData();\n                } else {\n                    this.page = 1;\n                }\n            },\n            query(current) {\n                if (current.length == 0 || this.query.length == 0) {\n                    this.resetState();\n                } else {\n                    if (current.length >= 3) {\n                        if (!this.state.hasOwnProperty('records')) {\n                            this.saveState();\n                        }\n\n                        this.page = 1;\n                        this.sort = '';\n                        this.loadData();\n                    }\n                }\n            },\n        },\n        methods: {\n            getLink() {\n                return `${this.url}?page=${this.page}&per_page=${this.perPage}${this.getQuery()}${this.getSortBy()}`;\n            },\n            loadData() {\n                axios.get(this.getLink())\n                    .then((response) => {\n                        this.last = response.data.last_page;\n                        this.total = response.data.total;\n                        this.from = response.data.from;\n                        this.to = response.data.to;\n                        this.records = response.data.data;\n                    })\n            },\n            nextPage() {\n                if (this.page < this.last) {\n                    this.page++;\n                }\n            },\n            saveState() {\n                this.state.page = this.page;\n                this.state.last = this.last;\n                this.state.records = this.records;\n                this.state.total = this.total;\n                this.state.from = this.from;\n                this.state.to = this.to;\n                this.state.sort = this.sort;\n            },\n            resetState() {\n                this.records = this.state.records;\n                this.page = this.state.page;\n                this.last = this.state.last;\n                this.total = this.state.total;\n                this.from = this.state.from;\n                this.to = this.state.to;\n                this.sort = this.state.sort;\n\n                this.state = {};\n            },\n            goToFirst() {\n                this.page = 1;\n            },\n            goToLast() {\n                this.page = this.last;\n            },\n            goToNext() {\n                if (this.page < this.last) {\n                    this.page++;\n                }\n            },\n            goToPrev() {\n                if (this.page > 1) {\n                    this.page--;\n                }\n            },\n            setPage(event) {\n                let number = parseInt(event.target.value);\n\n                if (number < 1) {\n                    this.page = 1;\n                } else if (number > this.last) {\n                    this.page = this.last;\n                } else {\n                    this.page = number;\n                }\n            },\n            getQuery() {\n                if (this.state.hasOwnProperty('records')) {\n                    if (this.query.length) {\n                        return `&query_by=${this.query}`;\n                    }\n\n                    return '';\n                }\n\n                return '';\n            },\n            getSortBy() {\n                if (this.sort.length) {\n                    return this.direction;\n                }\n\n                return '';\n            },\n            prepareTitles() {\n                if (this.titles.length) {\n                    // Add  the selected custom field\n                    this.titles = this.titles.forEach((title) => {\n                        this.$set(title, 'selected', false);\n                    });\n                }\n            },\n            setSort(header) {\n                this.titles = this.titles.forEach((title) => {\n                    title.selected = false;\n                });\n\n                header.selected = true;\n\n                let direction = this.getDirection(header);\n\n                if (this.sort == header.field) {\n                    if (this.direction == direction.asc) {\n                        this.direction = direction.desc;\n                    } else if (this.direction == direction.desc) {\n                        this.direction = direction.asc;\n                    } else {\n                        this.direction = direction.asc;\n                    }\n                } else {\n                    this.sort = header.field;\n                    this.direction = direction.asc;\n                }\n\n                this.loadData();\n            },\n            getDirection(header) {\n                return {\n                    desc: `&ordered_desc=${header.field}`,\n                    asc: `&ordered_asc=${header.field}`,\n                };\n            },\n        },\n    };\n</script>","import Table from \"./Table.vue\";\n\nexport default {\n\tinstall(Vue, options) {\n\t\tVue.component(\"table\", Table);\n\t}\n};\n"],"names":["normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","install","Vue","component","Table"],"mappings":";;;;;yFAAA,SAASA,EAAmBC,EAAUC,EAAOC,EAAQC,EAASC,EAAsBC,EAAoCC,EAAYC,EAAgBC,EAAmBC,GACzI,kBAAfH,IACPE,EAAoBD,EACpBA,EAAiBD,EACjBA,GAAa,GAGjB,MAAMI,EAA4B,mBAAXR,EAAwBA,EAAOQ,QAAUR,EAehE,IAAIS,EAmCJ,GAhDIX,GAAYA,EAASY,SACrBF,EAAQE,OAASZ,EAASY,OAC1BF,EAAQG,gBAAkBb,EAASa,gBACnCH,EAAQI,WAAY,EAEhBV,IACAM,EAAQK,YAAa,IAIzBZ,IACAO,EAAQM,SAAWb,GAGnBE,GAEAM,EAAO,SAAUM,IAEbA,EACIA,GACKC,KAAKC,QAAUD,KAAKC,OAAOC,YAC3BF,KAAKG,QAAUH,KAAKG,OAAOF,QAAUD,KAAKG,OAAOF,OAAOC,aAElB,oBAAxBE,sBACnBL,EAAUK,qBAGVrB,GACAA,EAAMsB,KAAKL,KAAMV,EAAkBS,IAGnCA,GAAWA,EAAQO,uBACnBP,EAAQO,sBAAsBC,IAAIpB,IAK1CK,EAAQgB,aAAef,GAElBV,IACLU,EAAOL,EACD,SAAUW,GACRhB,EAAMsB,KAAKL,KAAMT,EAAqBQ,EAASC,KAAKS,MAAMC,SAASC,cAErE,SAAUZ,GACRhB,EAAMsB,KAAKL,KAAMX,EAAeU,MAGxCN,EACA,GAAID,EAAQK,WAAY,CAEpB,MAAMe,EAAiBpB,EAAQE,OAC/BF,EAAQE,OAAS,SAAkCmB,EAAGd,GAElD,OADAN,EAAKY,KAAKN,GACHa,EAAeC,EAAGd,QAG5B,CAED,MAAMe,EAAWtB,EAAQuB,aACzBvB,EAAQuB,aAAeD,EAAW,GAAGE,OAAOF,EAAUrB,GAAQ,CAACA,GAGvE,OAAOT,ECtEX,00MCAe,CACdiC,iBAAQC,EAAK1B,GACZ0B,EAAIC,UAAU,QAASC"}